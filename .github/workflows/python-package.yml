# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PySpark CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest

      - name: Deploy to Databricks
        run: |
          # Add your deployment commands here
          # For example:
          # databricks workspace import_dir /path/to/notebooks /DatabricksWorkspacePath

      - name: Trigger integration tests
        run: |
          # Add your integration test commands here
          # For example:
          # databricks jobs run-now --job-id <job-id>






# on:
#   push:
#       branches:
#           -main
#   #   branches: [ "master" ]
#   # pull_request:
#   #   branches: [ "master" ]

# jobs:
#   build:
#       runs-on: ubuntu-latest
#       steps:
#           - name: Checkout code
#           uses: actions/checkout@v2
    
        





      
    
    # runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     python-version: ["3.9", "3.10", "3.11"]

    # steps:
    # - uses: actions/checkout@v4
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     python -m pip install flake8 pytest
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
